@page "/"
@inject MoviesClient Client

<PageTitle>My Movies Database!</PageTitle>
<div class="row">
  <div>
    <h1 class="text-center text-success">My Movies Database</h1>
    <p>Welcome to the My Movies Database! This is a simple Blazor application that allows you to manage your movie collection.</p>
    <p>Use the navigation menu to explore the different features of the application.</p>
    @if (movies is null)
    {
      <p class="text-center">Loading ...</p>
    }
    else
    {
      <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var movie in movies)
        {
          <div class="col">
            <div class="card border-info text-center h-100">
              <div class="card-header">
                <h5 class="card-title">@movie.Name</h5>
              </div>
              <div class="card-body">
                <p class="card-text">@movie.Genre?.Name</p>
                <p class="card-text">@movie.Price.ToString("C")</p>
                <p class="card-text">@movie.ReleaseDate</p>
              </div>
              <div class="card-footer">
                <a class="btn btn-info" role="button" href="@MovieUrl(movie.Id)">
                  <i class="bi bi-pencil"></i>
                </a>
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(movie)">
                  <i class="bi bi-trash"></i>
                </button>
                <DeleteMovie Movie="@movie"/>
              </div>
            </div>
          </div>
        }
      </div>

    }
  </div>
</div>

@code {
  private Movie[]? movies;
  protected override async Task OnInitializedAsync() // This method is called when the component is initialized
  {
    movies = await Client.GetMoviesAsync();
  }

  private static string MovieUrl(int id) => $"addEditMovie/{id}";

  private string GetDeleteModalId(Movie movie) => $"#{DeleteMovie.GetModalId(movie)}"; // this is a static method from DeleteMovie component
}
